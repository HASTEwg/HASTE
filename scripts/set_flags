#!/bin/sh

# Peprocessor definitions for conditional compilation:
#  - Operating System (default Windows, -DLIN_OS for Linux)
#  - Intel MKL PRNGs (default off, -DIMKL for Intel MKL)
#  - Coarray support (default off, -DCAF enables coarrays)
#  - Compiler vendor (-DGFORT for gFortran, -DIFORT for Intel)
PREP_FLAGS="-cpp -DLIN_OS -DGFORT"

# General compiler flags (applies to all builds)
OBJ_DIR="../build/obj/"
DIR_FLAGS="-I${OBJ_DIR} -J${OBJ_DIR}"
ALWAYS_FLAGS="-ffree-line-length-0 -fimplicit-none -fmax-errors=5 ${DIR_FLAGS}"
# DEVELOPMENT Flags (fastest compile cycle, no object files, no linking)
SYNTAX_FLAGS="-O0 -fmax-errors=5 -Wall -Wextra -pedantic ${ALWAYS_FLAGS} -fsyntax-only"
# DEBUG Compiler Flags (for debug builds, fast compile with full debug information)
DEBUG_FLAGS="-g -Og -Wall -pedantic -fcheck=all -fbacktrace ${ALWAYS_FLAGS}"
# RELEASE Compiler Flags (optimize for runtime speed)
RELEASE_FLAGS="-Ofast ${ALWAYS_FLAGS}"
# RASPBERRY PI RELEASE Compiler Flags (because this development environment is super-high performance!)
RELEASE_FLAGS_PI="-Ofast -mcpu=cortex-a53 -mfloat-abi=hard -mfpu=neon-fp-armv8 -mtune=cortex-a53 ${ALWAYS_FLAGS}"
# Set compiler flags based on command flag
while getopts 'sdrp' flag; do
  case "${flag}" in
    s) COMP_FLAGS="${SYNTAX_FLAGS}" ;;
    d) COMP_FLAGS="${DEBUG_FLAGS}" ;;
    r) COMP_FLAGS="${RELEASE_FLAGS}" ;;
    p) COMP_FLAGS="${RELEASE_FLAGS_PI}" ;;
    *) COMP_FLAGS="${DEBUG_FLAGS}" ;;
  esac
done

# LINKER Flags
LINK_FLAGS="-flto -fuse-linker-plugin"

# Uncomment to enable SINGLE coarray behavior
#PREP_FLAGS="${PREP_FLAGS} -DCAF"
#COMP_FLAGS="${COMP_FLAGS} -fcoarray=single"
#LIB_FLAGS="${COMP_FLAGS} -lcaf_single"
# Uncomment to enable full coarray execution
#PREP_FLAGS="${PREP_FLAGS} -DCAF"
#COMP_FLAGS="${COMP_FLAGS} -fcoarray=lib"
#LIB_FLAGS="${COMP_FLAGS} -lcaf_mpi"

GFORT_FLAGS="${PREP_FLAGS} ${COMP_FLAGS} ${LINK_FLAGS}"
GFORT_FLAGS_o="${GFORT_FLAGS} -c"
